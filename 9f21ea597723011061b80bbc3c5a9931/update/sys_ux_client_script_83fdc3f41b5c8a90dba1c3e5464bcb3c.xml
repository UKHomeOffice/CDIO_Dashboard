<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="HO Product Performance League Table default">278faed57763011061b80bbc3c5a99c6</macroponent>
        <name>stylized_text_209/text</name>
        <preset/>
        <required_translations>[ ]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    var KPI_PIS_list = api.data.verticalC_headlinemetric1v.output.result;
    var arr1 = [];
    for (let i = 0; i < KPI_PIS_list.length; i++) {
        var myObj = {};
        var KPI_PIS = KPI_PIS_list[i].element_level2.display_value;
        var KPI_PIS_score = KPI_PIS_list[i].scores[0].value;
        if (KPI_PIS_score > 1000) {
            var health = 'red';
        } else if (KPI_PIS_score > 500 && KPI_PIS_score <= 1000) {
            var health = 'amber';
        } else {
            var health = 'green';
        }
        arr1.push({[KPI_PIS]:health});
    }
    // return JSON.stringify(arr1);

    var KPI_PIS_list = api.data.verticalC_headlinemetric2v.output.result;
    var arr2 = [];
    for (let i = 0; i < KPI_PIS_list.length; i++) {
        var myObj = {};
        var KPI_PIS = KPI_PIS_list[i].element_level2.display_value;
        var KPI_PIS_score = KPI_PIS_list[i].scores[0].value;
        if (KPI_PIS_score >= 8) {
            var health = 'red';
        } else if (KPI_PIS_score > 4 && KPI_PIS_score < 8) {
            var health = 'amber';
        } else {
            var health = 'green';
        }
        arr2.push({[KPI_PIS]:health});
    }
    // return JSON.stringify(arr2);

const combinedValues = {};

// Function to process each array
function processArray(arr) {
  arr.forEach(obj => {
    for (const key in obj) {
      if (!combinedValues[key]) {
        combinedValues[key] = [];
      }
      combinedValues[key].push(obj[key]);
    }
  });
}

// Process each array
processArray(arr1);
processArray(arr2);
// return JSON.stringify(combinedValues);

// const input = {
//   "key1": ["green", "green"],
//   "key2": ["amber", "red"]
// };

const input = combinedValues;
const output = {};

for (const key in input) {
  const values = input[key];
  const counts = {};
  
  // Count occurrences of each color
  values.forEach(color => {
    counts[color] = (counts[color] || 0) + 1;
  });

  // Construct an array with a single object containing all color-count pairs
  const result = [counts];

  output[key] = result;
}

// return output['key1'][0]['green'];
return JSON.stringify(output);

}


]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>VelentL</sys_created_by>
        <sys_created_on>2024-02-09 13:38:47</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>83fdc3f41b5c8a90dba1c3e5464bcb3c</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>stylized_text_209/text</sys_name>
        <sys_package display_value="CIO Dashboard" source="sn_ciodashboard">9f21ea597723011061b80bbc3c5a9931</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CIO Dashboard">9f21ea597723011061b80bbc3c5a9931</sys_scope>
        <sys_update_name>sys_ux_client_script_83fdc3f41b5c8a90dba1c3e5464bcb3c</sys_update_name>
        <sys_updated_by>VelentL</sys_updated_by>
        <sys_updated_on>2024-02-16 12:44:57</sys_updated_on>
        <target>macroponent</target>
        <type>transform</type>
    </sys_ux_client_script>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="CIO Dashboard">9f21ea597723011061b80bbc3c5a9931</claim_owner_scope>
        <claim_timestamp>18d8e238f610000001</claim_timestamp>
        <metadata_update_name>sys_ux_client_script_83fdc3f41b5c8a90dba1c3e5464bcb3c</metadata_update_name>
        <previous_claim_app_version>1.0.2</previous_claim_app_version>
        <previous_claim_name>CIO Dashboard</previous_claim_name>
        <previous_claim_scope>9f21ea597723011061b80bbc3c5a9931</previous_claim_scope>
        <sys_created_by>VelentL</sys_created_by>
        <sys_created_on>2024-02-09 13:51:51</sys_created_on>
        <sys_id>e6f05bb41b10ca90dba1c3e5464bcba1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>VelentL</sys_updated_by>
        <sys_updated_on>2024-02-09 13:51:51</sys_updated_on>
    </sys_claim>
</record_update>
